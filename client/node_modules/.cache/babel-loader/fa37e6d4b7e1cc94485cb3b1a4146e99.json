{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\kien_app\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\"; // import Home from './component/home/Home';\n// import WhatchingVideo from './component/whatching/WhatchingVideo';\n\nimport Header from \"./component/nav/Header\";\nimport DieuHuongUrl from \"./router/DieuHuongUrl\";\nimport { ApolloClient, InMemoryCache, ApolloProvider, HttpLink } from \"@apollo/client\"; // Tạo Liên kết truy vấn cố định\n\nimport { createPersistedQueryLink } from \"@apollo/client/link/persisted-queries\"; // Hàm băm\n\nimport { sha256 } from 'crypto-hash';\nimport { setContext } from '@apollo/client/link/context';\nimport { AUTH_TOKEN } from './constants';\nimport { CloudinaryContext } from \"cloudinary-react\"; // Phần mềm chung gian gắn token vào mọi res đến máy chủ\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // Lấy token trong local Storage\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    // Gắn token vào headers của res\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n}); // thiết lập bộ nhớ cache\n\nconst linkChain = createPersistedQueryLink({\n  sha256,\n  // Mặc định get với dữ liệu trong cache\n  useGETForHashedQueries: true\n}).concat(new HttpLink({\n  uri: \"http://localhost:4000/\",\n  opts: {\n    mode: \"no-cors\"\n  }\n})); //  const linkChain = {uri: \"http://localhost:4000/\"};\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(linkChain)\n});\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    // Apollo client\n    _jsxDEV(ApolloProvider, {\n      client: client,\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: /*#__PURE__*/_jsxDEV(CloudinaryContext, {\n          cloudName: \"nhk598\",\n          secure: \" true \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container-fluid\",\n            children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(DieuHuongUrl, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 4\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 1\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/kien_app/client/src/App.js"],"names":["React","BrowserRouter","Router","Header","DieuHuongUrl","ApolloClient","InMemoryCache","ApolloProvider","HttpLink","createPersistedQueryLink","sha256","setContext","AUTH_TOKEN","CloudinaryContext","authLink","_","headers","token","localStorage","getItem","authorization","linkChain","useGETForHashedQueries","concat","uri","opts","mode","client","cache","link","App"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,QAGO,kBAHP,C,CAIA;AACA;;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,QAJF,QAKO,gBALP,C,CAMA;;AACA,SAASC,wBAAT,QAAyC,uCAAzC,C,CACA;;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CACA;;;AACA,MAAMC,QAAQ,GAAGH,UAAU,CAAC,CAACI,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C;AACA,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBP,UAArB,CAAd;AACA,SAAO;AACL;AACAI,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPI,MAAAA,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AAFJ,GAAP;AAOD,CAV0B,CAA3B,C,CAWA;;AACA,MAAMI,SAAS,GAAGZ,wBAAwB,CAAC;AACzCC,EAAAA,MADyC;AAEzC;AACAY,EAAAA,sBAAsB,EAAE;AAHiB,CAAD,CAAxB,CAIfC,MAJe,CAKhB,IAAIf,QAAJ,CAAa;AAAEgB,EAAAA,GAAG,EAAE,wBAAP;AAAiCC,EAAAA,IAAI,EAAE;AAClDC,IAAAA,IAAI,EAAE;AAD4C;AAAvC,CAAb,CALgB,CAAlB,C,CAQA;;AACA,MAAMC,MAAM,GAAG,IAAItB,YAAJ,CAAiB;AAC9BuB,EAAAA,KAAK,EAAE,IAAItB,aAAJ,EADuB;AAG9BuB,EAAAA,IAAI,EAAEf,QAAQ,CAACS,MAAT,CAAgBF,SAAhB;AAHwB,CAAjB,CAAf;;AAOA,SAASS,GAAT,GAAe;AACb;AAAA;AACE;AACJ,YAAC,cAAD;AAAgB,MAAA,MAAM,EAAEH,MAAxB;AAAA,6BAEG,QAAC,MAAD;AAAA,+BAEA,QAAC,iBAAD;AAAmB,UAAA,SAAS,EAAC,QAA7B;AAAsC,UAAA,MAAM,EAAG,QAA/C;AAAA,iCACG;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA,oCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAFH;AAAA;AAAA;AAAA;AAAA;AAFE;AAkBD;;KAnBQG,G;AAqBT,eAAeA,GAAf","sourcesContent":["\nimport React from 'react'\nimport {\n  BrowserRouter as Router,\n  \n} from \"react-router-dom\";\n// import Home from './component/home/Home';\n// import WhatchingVideo from './component/whatching/WhatchingVideo';\nimport Header from \"./component/nav/Header\";\nimport DieuHuongUrl from \"./router/DieuHuongUrl\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider, \n  HttpLink\n} from \"@apollo/client\";\n// Tạo Liên kết truy vấn cố định\nimport { createPersistedQueryLink } from \"@apollo/client/link/persisted-queries\";\n// Hàm băm\nimport { sha256 } from 'crypto-hash';\nimport { setContext } from '@apollo/client/link/context';\nimport { AUTH_TOKEN } from './constants';\nimport { CloudinaryContext } from \"cloudinary-react\";\n// Phần mềm chung gian gắn token vào mọi res đến máy chủ\nconst authLink = setContext((_, { headers }) => {\n  // Lấy token trong local Storage\n  const token = localStorage.getItem(AUTH_TOKEN);\n  return {\n    // Gắn token vào headers của res\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\n// thiết lập bộ nhớ cache\nconst linkChain = createPersistedQueryLink({ \n  sha256, \n  // Mặc định get với dữ liệu trong cache\n  useGETForHashedQueries: true\n}).concat(\n  new HttpLink({ uri: \"http://localhost:4000/\", opts: {\n    mode: \"no-cors\",\n  }, }));\n//  const linkChain = {uri: \"http://localhost:4000/\"};\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  \n  link: authLink.concat(linkChain) ,\n});\n\n\nfunction App() {\n  return (\n    // Apollo client\n<ApolloProvider client={client}>\n  {/* router */}\n   <Router>\n     {/* Kết nối với cloud Cloudinary */}\n   <CloudinaryContext cloudName=\"nhk598\" secure = \" true \">\n      <div className=\"container-fluid\">\n        <Header></Header>\n        <DieuHuongUrl></DieuHuongUrl>\n      </div>\n    </CloudinaryContext>\n    </Router>\n   \n</ApolloProvider>\n   \n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}