{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\giaodien_client\\\\client\\\\src\\\\component\\\\Aad.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSnackbar } from \"react-simple-snackbar\";\nimport Button from \"../styles/Button\";\nimport Wrapper from \"../styles/EditChannelModal\";\nimport { updateUser } from \"../utils/api-client\";\nimport { uploadMedia } from \"../utils/upload-media\";\nimport { CloseIcon } from \"./Icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditChannelModal({\n  channel,\n  closeModal\n}) {\n  _s();\n\n  const [openSnackbar] = useSnackbar();\n  const [cover, setCover] = React.useState(channel.cover);\n  const [avatar, setAvatar] = React.useState(channel.avatar);\n\n  async function handleCoverUpload(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const cover = await uploadMedia({\n        type: \"image\",\n        file,\n        preset: \"your-cover-preset\"\n      });\n      setCover(cover);\n    }\n  }\n\n  async function handleAvatarUpload(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      const avatar = await uploadMedia({\n        type: \"image\",\n        file,\n        preset: \"your-avatar-preset\"\n      });\n      setAvatar(avatar);\n    }\n  }\n\n  async function handleEditChannel(event) {\n    event.preventDefault();\n    const username = event.target.elements.username.value;\n    const about = event.target.elements.about.value;\n\n    if (!username.trim()) {\n      return openSnackbar(\"Username cannot be empty\");\n    }\n\n    const user = {\n      username,\n      about,\n      avatar,\n      cover\n    };\n    await updateUser(user);\n    openSnackbar(\"Channel updated\");\n    closeModal();\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit-channel\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEditChannel,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n              onClick: closeModal\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Edit Channel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cover-upload-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"cover-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pointer\",\n              width: \"100%\",\n              height: \"200px\",\n              src: cover,\n              alt: \"cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"cover-upload\",\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            },\n            onChange: handleCoverUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar-upload-icon\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"avatar-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: avatar,\n              className: \"pointer avatar lg\",\n              alt: \"avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"avatar-upload\",\n            type: \"file\",\n            accept: \"image/*\",\n            style: {\n              display: \"none\"\n            },\n            onChange: handleAvatarUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Insert username\",\n          id: \"username\",\n          defaultValue: channel.username,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"about\",\n          placeholder: \"Tell viewers about your channel\",\n          defaultValue: channel.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditChannelModal, \"U72ZFkJETJgMlTMal1EtGE6NFYc=\", false, function () {\n  return [useSnackbar];\n});\n\n_c = EditChannelModal;\nexport default EditChannelModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditChannelModal\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/giaodien_client/client/src/component/Aad.js"],"names":["React","useSnackbar","Button","Wrapper","updateUser","uploadMedia","CloseIcon","EditChannelModal","channel","closeModal","openSnackbar","cover","setCover","useState","avatar","setAvatar","handleCoverUpload","event","file","target","files","type","preset","handleAvatarUpload","handleEditChannel","preventDefault","username","elements","value","about","trim","user","display"],"mappings":"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","sourcesContent":["\r\nimport React from \"react\";\r\nimport { useSnackbar } from \"react-simple-snackbar\";\r\nimport Button from \"../styles/Button\";\r\nimport Wrapper from \"../styles/EditChannelModal\";\r\nimport { updateUser } from \"../utils/api-client\";\r\nimport { uploadMedia } from \"../utils/upload-media\";\r\nimport { CloseIcon } from \"./Icons\";\r\n\r\nfunction EditChannelModal({ channel, closeModal }) {\r\n  const [openSnackbar] = useSnackbar();\r\n  const [cover, setCover] = React.useState(channel.cover);\r\n  const [avatar, setAvatar] = React.useState(channel.avatar);\r\n\r\n  async function handleCoverUpload(event) {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const cover = await uploadMedia({\r\n        type: \"image\",\r\n        file,\r\n        preset: \"your-cover-preset\",\r\n      });\r\n      setCover(cover);\r\n    }\r\n  }\r\n\r\n  async function handleAvatarUpload(event) {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      const avatar = await uploadMedia({\r\n        type: \"image\",\r\n        file,\r\n        preset: \"your-avatar-preset\",\r\n      });\r\n      setAvatar(avatar);\r\n    }\r\n  }\r\n\r\n  async function handleEditChannel(event) {\r\n    event.preventDefault();\r\n    const username = event.target.elements.username.value;\r\n    const about = event.target.elements.about.value;\r\n\r\n    if (!username.trim()) {\r\n      return openSnackbar(\"Username cannot be empty\");\r\n    }\r\n\r\n    const user = {\r\n      username,\r\n      about,\r\n      avatar,\r\n      cover,\r\n    };\r\n\r\n    await updateUser(user);\r\n    openSnackbar(\"Channel updated\");\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"edit-channel\">\r\n        <form onSubmit={handleEditChannel}>\r\n          <div className=\"modal-header\">\r\n            <h3>\r\n              <CloseIcon onClick={closeModal} />\r\n              <span>Edit Channel</span>\r\n            </h3>\r\n            <Button type=\"submit\">Save</Button>\r\n          </div>\r\n\r\n          <div className=\"cover-upload-container\">\r\n            <label htmlFor=\"cover-upload\">\r\n              <img\r\n                className=\"pointer\"\r\n                width=\"100%\"\r\n                height=\"200px\"\r\n                src={cover}\r\n                alt=\"cover\"\r\n              />\r\n            </label>\r\n            <input\r\n              id=\"cover-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              onChange={handleCoverUpload}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"avatar-upload-icon\">\r\n            <label htmlFor=\"avatar-upload\">\r\n              <img src={avatar} className=\"pointer avatar lg\" alt=\"avatar\" />\r\n            </label>\r\n            <input\r\n              id=\"avatar-upload\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              style={{ display: \"none\" }}\r\n              onChange={handleAvatarUpload}\r\n            />\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Insert username\"\r\n            id=\"username\"\r\n            defaultValue={channel.username}\r\n            required\r\n          />\r\n          <textarea\r\n            id=\"about\"\r\n            placeholder=\"Tell viewers about your channel\"\r\n            defaultValue={channel.about}\r\n          />\r\n        </form>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default EditChannelModal;"]},"metadata":{},"sourceType":"module"}