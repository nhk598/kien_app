{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Asus\\\\Desktop\\\\kien_app\\\\client\\\\src\\\\component\\\\manageUser\\\\bodyManageUser\\\\manageSetting\\\\settingForm\\\\CoverForm.js\",\n    _s = $RefreshSig$();\n\nimport { useMutation } from '@apollo/client';\nimport React from 'react';\nimport { PUBLISH_USER } from '../../../../../graphql-client/Mutation';\nimport { useState } from 'react';\nimport { openUploadWidget } from '../../../../../cloudinaryService/CloudinaryService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CoverForm() {\n  _s();\n\n  const [coverForm, setCoverForm] = useState({\n    coverForm: ''\n  });\n  const [settingUser] = useMutation(PUBLISH_USER, {\n    variables: {\n      cover: coverForm.coverForm\n    }\n  });\n\n  const beginUpload = tag => {\n    const uploadOptions = {\n      cloudName: \"nhk598\",\n      tags: [tag],\n      uploadPreset: \"tailen\"\n    };\n    openUploadWidget(uploadOptions, (error, photos) => {\n      if (!error) {\n        // console.log(photos.info.thumbnail_url);\n        if (photos.event === 'success') {\n          setCoverForm({ ...coverForm,\n            coverForm: photos.info.secure_url\n          }); // setFormState({...formState,thumbnail: photos.info.thumbnail_url})\n        }\n      } else {\n        console.log(error);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"submit\",\n    onSubmit: e => {\n      e.preventDefault();\n      settingUser();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"manageAvatar\",\n        children: \" Ch\\u1ECDn \\u1EA3nh b\\xECa \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        value: settingUser.coverForm,\n        onClick: () => beginUpload(),\n        children: \" Ch\\u1ECDn \\u1EA3nh b\\xECa c\\u1EE7a b\\u1EA1n \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 65\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \" C\\u1EADp nh\\u1EADt \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 14\n  }, this);\n}\n\n_s(CoverForm, \"FE3CWKU2V8BvmAfKvgKxacDKGjw=\", false, function () {\n  return [useMutation];\n});\n\n_c = CoverForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoverForm\");","map":{"version":3,"sources":["C:/Users/Asus/Desktop/kien_app/client/src/component/manageUser/bodyManageUser/manageSetting/settingForm/CoverForm.js"],"names":["useMutation","React","PUBLISH_USER","useState","openUploadWidget","CoverForm","coverForm","setCoverForm","settingUser","variables","cover","beginUpload","tag","uploadOptions","cloudName","tags","uploadPreset","error","photos","event","info","secure_url","console","log","e","preventDefault"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,gBAAT,QAAiC,oDAAjC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC;AACvCG,IAAAA,SAAS,EAAE;AAD4B,GAAD,CAA1C;AAIA,QAAM,CAACE,WAAD,IAAgBR,WAAW,CAACE,YAAD,EAAe;AAC5CO,IAAAA,SAAS,EAAE;AACPC,MAAAA,KAAK,EAAEJ,SAAS,CAACA;AADV;AADiC,GAAf,CAAjC;;AAMA,QAAMK,WAAW,GAAGC,GAAG,IAAI;AACvB,UAAMC,aAAa,GAAG;AAClBC,MAAAA,SAAS,EAAE,QADO;AAElBC,MAAAA,IAAI,EAAE,CAACH,GAAD,CAFY;AAGlBI,MAAAA,YAAY,EAAE;AAHI,KAAtB;AAMAZ,IAAAA,gBAAgB,CAACS,aAAD,EAAgB,CAACI,KAAD,EAAQC,MAAR,KAAmB;AAC/C,UAAI,CAACD,KAAL,EAAY;AACR;AACA,YAAIC,MAAM,CAACC,KAAP,KAAiB,SAArB,EAAgC;AAC5BZ,UAAAA,YAAY,CAAC,EAAC,GAAGD,SAAJ;AAAeA,YAAAA,SAAS,EAAEY,MAAM,CAACE,IAAP,CAAYC;AAAtC,WAAD,CAAZ,CAD4B,CAE5B;AAEH;AAEJ,OARD,MAQO;AACHC,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACH;AACJ,KAZe,CAAhB;AAaH,GApBD;;AAqBA,sBAAS;AACA,IAAA,MAAM,EAAG,QADT;AAEL,IAAA,QAAQ,EACHO,CAAD,IAAO;AACHA,MAAAA,CAAC,CAACC,cAAF;AACAjB,MAAAA,WAAW;AAEd,KAPA;AAAA,4BASL;AACI,MAAA,SAAS,EAAG,YADhB;AAAA,8BAEA;AACM,QAAA,OAAO,EAAG,cADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA,oBAGwD;AACjD,QAAA,KAAK,EAAKA,WAAW,CAACF,SAD2B;AAExD,QAAA,OAAO,EACH,MAAMK,WAAW,EAHmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHxD;AAAA;AAAA;AAAA;AAAA;AAAA,YATK,oBAkBC;AACC,MAAA,IAAI,EAAG,QADR;AAEN,MAAA,SAAS,EAAG,iBAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAwBH;;GAxDuBN,S;UAKEL,W;;;KALFK,S","sourcesContent":["import { useMutation } from '@apollo/client'\r\nimport React from 'react'\r\nimport { PUBLISH_USER } from '../../../../../graphql-client/Mutation'\r\nimport { useState } from 'react'\r\nimport { openUploadWidget } from '../../../../../cloudinaryService/CloudinaryService'\r\n\r\nexport default function CoverForm() {\r\n    const [coverForm, setCoverForm] = useState({\r\n        coverForm: '',\r\n\r\n    })\r\n    const [settingUser] = useMutation(PUBLISH_USER, {\r\n        variables: {\r\n            cover: coverForm.coverForm,\r\n\r\n        }\r\n    })\r\n    const beginUpload = tag => {\r\n        const uploadOptions = {\r\n            cloudName: \"nhk598\",\r\n            tags: [tag],\r\n            uploadPreset: \"tailen\"\r\n        };\r\n\r\n        openUploadWidget(uploadOptions, (error, photos) => {\r\n            if (!error) {\r\n                // console.log(photos.info.thumbnail_url);\r\n                if (photos.event === 'success') {\r\n                    setCoverForm({...coverForm, coverForm: photos.info.secure_url });\r\n                    // setFormState({...formState,thumbnail: photos.info.thumbnail_url})\r\n\r\n                }\r\n\r\n            } else {\r\n                console.log(error);\r\n            }\r\n        })\r\n    }\r\n    return ( <\r\n        form action = \"submit\"\r\n        onSubmit = {\r\n            (e) => {\r\n                e.preventDefault();\r\n                settingUser();\r\n\r\n            }\r\n        } >\r\n        <\r\n        div className = \"form-group\" >\r\n        <\r\n        label htmlFor = \"manageAvatar\" > Chọn ảnh bìa < /label> <\r\n        button value = { settingUser.coverForm }\r\n        onClick = {\r\n            () => beginUpload() } > Chọn ảnh bìa của bạn < /button>\r\n\r\n        <\r\n        /div> <\r\n        button type = \"submit\"\r\n        className = \"btn btn-primary\" > Cập nhật < /button> <\r\n        /form>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}