{"ast":null,"code":"import { gql } from '@apollo/client';\nconst SIGNUP = gql`\nmutation Signup (\n    $email: String!\n    $password: String!\n    $name: String!\n){\n    signup(\n        email: $email\n        password: $password\n        username: $name\n    ){\n        token\n    }\n}\n`;\nconst LOGIN = gql`\nmutation Login(\n    $email: String!\n    $password: String!\n){\n    login(email: $email, password: $password){\n        token\n    }\n}\n`;\nconst CREATE_VIDEO = gql`\nmutation createVideo(\n    $title: String\n    $description: String\n    $url: String!\n    $thumbnail: String!\n    $document: String\n    \n){\n    createVideo(title:$title, description:$description, url:$url, thumbnail: $thumbnail, document: $document){\n        id\n        title\n        user{\n        id\n        username\n        }\n    }\n}\n`; // async function publishUser(parent, args, context) {\n//     // Lấy id của người dùng đã đăng nhập\n//     const { userId } = context\n//     // Sửa thông tin người dùng\n//     const publishUser = context.prisma.user.update({\n//         where: {\n//             id: userId\n//         },\n//         data: {\n//             username: args.username,\n//             email: args.email,\n//             avatar: args.avatar,\n//             cover: args.cover,\n//             about: args.cover,\n//             password: args.password\n//         }\n//     })\n\nconst PUBLISH_USER = gql`\nmutation publishUser(\n    $username: String\n    $avatar: String\n    $cover: String\n    $about: String\n\n){\n    publishUser(username:$username, avatar:$avatar, cover:$cover, about: $about){\n        avatar\n        cover\n        about\n    }\n}\n`;\nconst CREAT_VIEW = gql`\nmutation creat_view($videoId: String!){\n    view(videoId: $videoId){\n        user{\n            id\n            username\n        }\n        video{\n            id\n            title\n        }\n    }\n}\n`; // comment(videoId: String!, text: String!): Comment\n\nconst NEW_COMMENT = gql`\nmutation new_comment($videoId: ID!, text: )\n`;\nexport { SIGNUP, LOGIN, CREATE_VIDEO, PUBLISH_USER, CREAT_VIEW };","map":{"version":3,"sources":["C:/Users/Asus/Desktop/kien_app/client/src/graphql-client/Mutation.js"],"names":["gql","SIGNUP","LOGIN","CREATE_VIDEO","PUBLISH_USER","CREAT_VIEW","NEW_COMMENT"],"mappings":"AAAA,SAASA,GAAT,QAAoB,gBAApB;AACA,MAAMC,MAAM,GAAGD,GAAK;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAME,KAAK,GAAGF,GAAK;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMG,YAAY,GAAGH,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA,C,CAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,MAAMI,YAAY,GAAGJ,GAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMK,UAAU,GAAGL,GAAK;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA,C,CAcI;;AACJ,MAAMM,WAAW,GAAGN,GAAK;AACzB;AACA,CAFA;AAGA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,EAAsCC,YAAtC,EAAoDC,UAApD","sourcesContent":["import { gql } from '@apollo/client'\r\nconst SIGNUP = gql `\r\nmutation Signup (\r\n    $email: String!\r\n    $password: String!\r\n    $name: String!\r\n){\r\n    signup(\r\n        email: $email\r\n        password: $password\r\n        username: $name\r\n    ){\r\n        token\r\n    }\r\n}\r\n`;\r\n\r\nconst LOGIN = gql `\r\nmutation Login(\r\n    $email: String!\r\n    $password: String!\r\n){\r\n    login(email: $email, password: $password){\r\n        token\r\n    }\r\n}\r\n`;\r\n\r\nconst CREATE_VIDEO = gql `\r\nmutation createVideo(\r\n    $title: String\r\n    $description: String\r\n    $url: String!\r\n    $thumbnail: String!\r\n    $document: String\r\n    \r\n){\r\n    createVideo(title:$title, description:$description, url:$url, thumbnail: $thumbnail, document: $document){\r\n        id\r\n        title\r\n        user{\r\n        id\r\n        username\r\n        }\r\n    }\r\n}\r\n`;\r\n\r\n// async function publishUser(parent, args, context) {\r\n//     // Lấy id của người dùng đã đăng nhập\r\n//     const { userId } = context\r\n//     // Sửa thông tin người dùng\r\n//     const publishUser = context.prisma.user.update({\r\n//         where: {\r\n//             id: userId\r\n//         },\r\n//         data: {\r\n//             username: args.username,\r\n//             email: args.email,\r\n//             avatar: args.avatar,\r\n//             cover: args.cover,\r\n//             about: args.cover,\r\n//             password: args.password\r\n//         }\r\n\r\n//     })\r\nconst PUBLISH_USER = gql `\r\nmutation publishUser(\r\n    $username: String\r\n    $avatar: String\r\n    $cover: String\r\n    $about: String\r\n\r\n){\r\n    publishUser(username:$username, avatar:$avatar, cover:$cover, about: $about){\r\n        avatar\r\n        cover\r\n        about\r\n    }\r\n}\r\n`;\r\n\r\nconst CREAT_VIEW = gql `\r\nmutation creat_view($videoId: String!){\r\n    view(videoId: $videoId){\r\n        user{\r\n            id\r\n            username\r\n        }\r\n        video{\r\n            id\r\n            title\r\n        }\r\n    }\r\n}\r\n`\r\n    // comment(videoId: String!, text: String!): Comment\r\nconst NEW_COMMENT = gql `\r\nmutation new_comment($videoId: ID!, text: )\r\n`\r\nexport { SIGNUP, LOGIN, CREATE_VIDEO, PUBLISH_USER, CREAT_VIEW }"]},"metadata":{},"sourceType":"module"}